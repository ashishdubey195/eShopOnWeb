name: eShopOnWeb Build and Deploy

on: [push, workflow_dispatch]

env:
  RESOURCE_GROUP: eshoponweb-rg
  LOCATION: eastasia
  TEMPLATE_FILE: infra/webapp.bicep
  SUBSCRIPTION_ID: 98c13e3f-ff9d-4f3f-a523-939b9f7de9a5
  WEBAPP_NAME: eshoponweb-webapp290

jobs:
  buildandtest:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore eShopOnWeb.sln

    - name: Build with dotnet
      run: dotnet build eShopOnWeb.sln --configuration Release --no-restore

    - name: Test with dotnet
      run: dotnet test eShopOnWeb.sln --configuration Release --no-build

    - name: Publish app
      run: |
        export DOTNET_ROOT=${DOTNET_ROOT:-/home/runner/.dotnet}
        mkdir -p $DOTNET_ROOT/deploy
        dotnet publish ./src/Web/Web.csproj -c Release -o $DOTNET_ROOT/deploy
        ls -lah $DOTNET_ROOT/deploy  # Verify published files
        zip -r $DOTNET_ROOT/app.zip $DOTNET_ROOT/deploy
        ls -lah $DOTNET_ROOT/  # Confirm app.zip exists

    - name: Debug - Check File Before Upload
      run: ls -lah /home/runner/.dotnet/

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: dotnet-app
        path: /home/runner/.dotnet/app.zip
        if-no-files-found: error  # Fail early if file is missing

    - name: Upload Bicep Template
      uses: actions/upload-artifact@v4
      with:
        name: bicep-template
        path: ${{ env.TEMPLATE_FILE }}

  deploy:
    runs-on: ubuntu-latest
    needs: buildandtest
    environment:
      name: 'Development'
    steps:
    - name: Check Available Artifacts
      run: |
        echo "Checking available artifacts..."
        ls -lah ${{ runner.temp }}/artifact/ || echo "No artifacts found!"

    - name: Download dotnet-app Artifact
      uses: actions/download-artifact@v4
      with:
        name: dotnet-app
        path: dotnet-app

    - name: Debug - List Downloaded Files
      run: ls -lah dotnet-app/

    - name: Download Bicep Template
      uses: actions/download-artifact@v4
      with:
        name: bicep-template
        path: bicep-template

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Infrastructure
      uses: azure/arm-deploy@v2
      with:
        subscriptionId: ${{ env.SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.RESOURCE_GROUP }}
        template: bicep-template/webapp.bicep
        parameters: 'webAppName=${{ env.WEBAPP_NAME }} location=${{ env.LOCATION }}'
        failOnStdErr: false   

    - name: Deploy WebApp via ZIP
      uses: azure/cli@v2
      with:
        inlineScript: |
          az webapp deployment source config-zip \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --name ${{ env.WEBAPP_NAME }} \
          --src dotnet-app/app.zip
